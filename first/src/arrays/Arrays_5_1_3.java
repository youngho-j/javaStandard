package arrays;


public class Arrays_5_1_3 {
	
/*	
	1. 배열이란?

   '같은 타입'의 여러 변수를 하나의 묶음으로 다루는 것
	int[] score = new int[5];
	
	0 ~ 4 : 배열의 인덱스(배열 생성이 자동으로 붙음)
	각 저장공간이 연속적임
	배열을 다루기 위해서는 참조변수가 필요
	참조변수에 이름을 붙이고 참조변수를 통해 저장공간을 다루게 됨
	참조변수이름과 인덱스를 사용해서 사용
*/	
	
/*
 * 2. 배열의 선언과 생성
 * 
 * 선언 -> 생성 (실제 저장공간 생성) 배열을 선언한다 -> 배열을 다루기 위한 참조변수의 선언
 * 
 * 선언방법 (둘다 지원하나 1번을 선호) 
 * 1. 타입[] 변수이름(Java) Ex) int[] score; 
 * 2. 타입 변수이름[](C언어) Ex) String name[];
 * 
 * 배열을 선언(배열을 다루기 위한 참조변수 선언) 
 * 타입[] 변수이름; 
 * 배열을 생성(실제 저장공간을 생성), 주소 값을 참조변수에 연결
 * 변수이름 = new 타입[길이];
 * 
 * Ex) 
 * int[] score; 
 * score = new int[5];
 */
	
	
/*
 * 3. 배열의 인덱스
 * 
 * 배열의 인덱스 - 각 요소(저장공간)에 자동으로 붙은 일련번호 인덱스(index)의 범위는 0 부터 '배열길이-1'까지
 * 
 * 왜 배열 길이에 -1을 하는가? 배열의 시작이 0부터 시작하므로 
 * Ex) int score = new int[5]; 0 1 2 3 4 이므로
 * 
 * 저장공간 하나 -> 배열의 요소
 * 
 * score[3] = 100; 배열 score의 4번째 요소에 100을 저장한다.
 * 
 * int value = score[3]; 배열 score의 4번째 요소의 값을 읽어서 value에 저장
 */
	
//	예제
	public static void main(String[] args) {
//		배열의 선언과 생성 기본 방법
		int[] score;  //1. 배열 score를 선언(참조변수)
		score = new int[5]; // 2. 배열의 생성(int 저장공간 x 5)

//		배열의 선언과 생성을 동시에 진행
//		int[] score = new int[5]; 
		
		for(int i = 0 ; i < score.length ; i++) {
			score[i] = i;
			System.out.println(score[i] + " ");
		}
	}
	
}
